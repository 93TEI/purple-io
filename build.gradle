buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.purple.test'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral() // 본인이 만든 라이브러리를 업로드할때 많은 과정과 설정 필요
    jcenter()   //위의 단점을 간단하게함. 또한 여기에 업로드하면 자동으로 메이븐에 업로드되게 자동화할수잇음
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.projectlombok:lombok') // perferences에서 annotation processor에 enable annotation processing을 매 플젝마다 해줘야됨

    //JPA 시작하면서 등록한 의존성
    compile('org.springframework.boot:spring-boot-starter-data-jpa') //스프링부트용 spring data jpa 추상화 라이브러리. 스프링부트 버전에 맞춰 자동으로 jap관련 라이브러리 버전 관리
    compile('com.h2database:h2') // 인메모리 관계형DB. 별도의 설치없이 프로젝트 의존성만으로 관리가능. 메모리에서 실행되기 때문에 애플리케이션을 재시작할 때마다 초기화된다는 점을 이용하여 테스트용도로 많이 사용

    //머스테치 ( 뷰 만들기 )
    compile('org.springframework.boot:spring-boot-starter-mustache')

    //데이터베이스 (세션을 저장하기 위한 저장소)
    compile('org.springframework.session:spring-session-jdbc')

    //테스트 환경을 위한 임의로 인증된 사용자를 추가
    testCompile("org.springframework.security:spring-security-test")
    testCompile('org.springframework.boot:spring-boot-starter-test')

    //빌더오류해결
    annotationProcessor('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')

    //json
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    //testCompile group: 'junit', name: 'junit', version: '4.12'
}
